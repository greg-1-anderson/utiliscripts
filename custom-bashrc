#!/bin/bash

#
# Some aliases that Greg likes:
#
alias sbrc='source $HOME/.bashrc'
alias lla='ls -A -l --si'
alias ll='ls -l --si'
alias la='ls -A'
alias l='ls -CF'
alias f='find . -name'
alias fj='find . -name "*.java"'
alias fppt='find . -name "*.ppt"'
alias fxls='find . -name "*.xls"'
alias portscan='nmap -sT -O'
alias openports='portscan localhost'

#
# Here are some colors -- we won't call tput unless we need to.
# To use these, wrap them in backticks, as in: "`${c_green}`"
#
c_cyan="tput setaf 6"
c_red="tput setaf 1"
c_green="tput setaf 2"
c_sgr0="tput sgr0"

#
# Put in some colorful information about the git status
# of the repository at the cwd.  The branch name is
# printed in [brackets]; it is red if the branch is
# dirty (non-empty "git diff"), and green if it is clean.
#
# Modified from similar scripts published at:
# http://asemanfar.com/Current-Git-Branch-in-Bash-Prompt
#
__git_prompt_info()
{
  if git rev-parse --git-dir >/dev/null 2>&1
  then
    gitver=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
    color=""
    if git diff --quiet 2>/dev/null >&2 
    then
      # Green
      color="`${c_green}`"
    else
      # Red
      color="`${c_red}`"
    fi
    echo -e "[${color}${gitver}`${c_sgr0}`] "
  else
    return 0
  fi
}

#
# We'll also put in colorful information about the svn
# status of the repository at the cwd.  The revision number
# is printed in (parens); it is red if the local copy
# is dirty (non-empty "svn diff"), and green if it is clean.
#
__svn_prompt_info()
{
  if [ -d .svn ]
  then
    svnrev=$(svn info 2>/dev/null | grep 'Last Changed Rev' | sed -e 's/^[^:]*: *//g')
    color=""
    svndiffoutput="`svn diff 2>/dev/null`"
    if [ -z $svndiffoutput ] 
    then
      # Green
      color="`${c_green}`"
    else
      # Red
      color="`${c_red}`"
    fi
    echo -e "(${color}r${svnrev}`${c_sgr0}`) "
  else
    return 0
  fi
}

PS1='$(__git_prompt_info)$(__svn_prompt_info)\u@\h:\w$ '

#
# If drush is in the $PATH, then source the
# example bashrc it provides.
#
d=`which drush`
if [ -n $d ] ; then
  # If the file found is a symlink, resolve to the actual file
  d=`readlink -f $d`
  # Get the directory that drush is stored in
  d="${d%/*}"
  if [ -f $d/examples/example.bashrc ] ; then
    . $d/examples/example.bashrc
  fi
fi
