#!/bin/bash

# Require THREE ^D characters in a row to exit
export IGNOREEOF=2

# Prevent Control-S from freezing terminal output
stty stop undef

# Locale settings
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8

#
# Some aliases and functions that Greg likes:
#
alias sbrc='source $HOME/.bashrc'
alias lla='ls -A -l --si'
alias ll='ls -l --si'
alias la='ls -A'
alias l='ls -CF'
alias f='find . -name'
alias fj='find . -name "*.java"'
alias fppt='find . -name "*.ppt"'
alias fxls='find . -name "*.xls"'
alias portscan='nmap -sT -O'
alias openports='portscan localhost'
alias rmrej='rm `find -name "*.rej"` `find -name "*.orig"`'
alias rot13='tr a-zA-Z n-za-mN-ZA-M'
alias findtabs="find -not -regex '..*/\..*' -exec grep -HP '\t' {} \;"
alias pull-all='for x in * ; do if [ -d $x/.git ] ; then ( cd $x ; s=$(git status -s); if [ -z "$s" ] ; then echo "Update $x." ; git pull ; else echo "$x is modified; skipping update." ; fi ) fi done'
alias geni-commit='git svn dcommit'
alias geni-update='git svn rebase'
alias gl='git log --oneline -12'
alias gs='git status'

function tolower() { tr A-Z a-z <<<$@; }
function mcd() { mkdir -p "$1" && cd "$1"; }

# Prompt configuration
c_red='0;31m'
c_green='0;32m'
c_blue='0;34m'
c_lt_grey='0;37m'
c_reset='0m'

__prompt_color()
{
  # Use git colors if we have a .git directory
  if git rev-parse --git-dir >/dev/null 2>&1
  then
    if git diff --quiet 2>/dev/null >&2
    then
      echo $c_green
    else
      echo $c_red
    fi
    return 0
  fi

  # Use svn colors if we have a .svn directory
  if [ -d .svn ]
  then
    svnstatusoutput="`svn status 2>/dev/null | grep -v '^\?'`"
    if [ -z "$svnstatusoutput" ]
    then
      echo $c_green
    else
      echo $c_red
    fi
    return 0
  fi

  echo $c_reset
  return 0
}

__prompt_info()
{
  # Emit the git branch if we have a .git directory
  if git rev-parse --git-dir >/dev/null 2>&1
  then
    gitver="$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')"
    echo -e "[${gitver}] "
    return 0
  fi

  # Emit the svn revision if we have a .svn directory
  if [ -d .svn ]
  then
    svnrev=$(svn info 2>/dev/null | grep '^Revision' | sed -e 's/^[^:]*: *//g')
    if [ -n "$svnrev" ]
    then
      echo -e "(r${svnrev}) "
    fi
    return 0
  fi

}

if [ "`type __drush_ps1 2> /dev/null`" == "" ] ; then
  __drush_ps1() {
    return 0
  }
fi

if [ "x$TERM" != "xcygwin" ] ; then
  PROMPT_COMMAND='_p=$(__prompt_info)'
  PS1='${_p:0:1}\[\e[$(__prompt_color)\]${_p:1:$((${#_p}-3))}\[\e[$c_reset\]${_p#"${_p%??}"}\[\e[$c_blue\]\u@\h:\w\[\e[$c_reset\]\[\e[$c_green\]$(__drush_ps1)\[\e[$c_reset\]$ '
fi

# Assume that we will use vi
export EDITOR=vi

# Exit here if there is no DISPLAY
#[ -z "$DISPLAY" ] && return

# Set the editor to 'se' if it is available
s=`which sublime_text 2>/dev/null`
s2=`which se 2>/dev/null`
if [ -n "$s" ] && [ -n "$s2" ] ; then
  export EDITOR=se
fi

#
# If drush is in the $PATH, then source the
# example bashrc it provides.
#
d=`which drush 2>/dev/null`
if [ -n "$d" ] ; then
  # If the file found is a symlink, resolve to the actual file
  d=`readlink -f $d`
  # Get the directory that drush is stored in
  d="${d%/*}"
  if [ -f "$d/examples/example.bashrc" ] ; then
    . "$d/examples/example.bashrc"
    # Add aliases for standard bash commands
    if [ -n "`type -t cddl`" ] ; then
      alias cd='cddl'
    fi
    if [ -n "`type -t lsd`" ] ; then
      alias ls='lsd'
    fi
    if [ -n "`type -t cpd`" ] ; then
      alias cp='cpd'
    fi
    if [ -n "`type -t dssh`" ] ; then
      alias ssh='dssh'
    fi
    if [ -n "`type -t gitd`" ] ; then
      alias git='gitd'
    fi
  fi
fi

# Start up ssh-agent.  From http://mah.everybody.org/docs/ssh
SSH_ENV="$HOME/.ssh/environment"

function start_agent {
     echo "Initialising new SSH agent..."
     /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
     echo succeeded
     chmod 600 "${SSH_ENV}"
     . "${SSH_ENV}" > /dev/null
     /usr/bin/ssh-add;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
     . "${SSH_ENV}" > /dev/null
     #ps ${SSH_AGENT_PID} doesn't work under cywgin
     ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
         start_agent;
     }
else
     start_agent;
fi

